1、恢复出厂设置
说明：
1，校验码说明：
{
   ver:1.1的校验码： {0x01, 0x01}  ，
   ver:1.10版本的校验码：{0x01, 0x0a}
}
 
2，锁控返回初始化的状态：
   初始化状态：
   {
       已经初始化：0x01，
	   未初始化：0x00
   }

3，未初始化时，识别码默认为0001020304050607,会话密钥用默认初始密钥加密，默认初始密钥为0001020304050607；
4，已初始化时，默认初始密钥和默认会话密钥均初始化为固定值0001020304050607；

功能：锁具清空所有数据，并置未初始化状态；
app发送的数据流：
数据流格式：uint8_t (按位进行操作，最小单元就是一个字节);
example
tx:uint8_t txBuf[]=
{
  0x03,  //恢复出厂设置的命令码
  
  /*接下来五个参数区,
   备注：校验码占住最后null内存区的首末地址
   数据长度（bytes）:2;(2个字节)
   */
  0x01,  //校验字段MSB，笔者自定义 param1 使用版本ver1.1
  0x01,  //校验字段LSB，笔者自定义 param1 使用版本ver1.1
  
  null   //param2  NC 保留操作位
  null,  //param3  NC 保留操作位
  null,  //param4  NC 保留操作位
  null,  //param5  NC 保留操作位 null：保留数据段，不占有任何空间
  
  0x01,  //校验字段MSB，笔者自定义 param1 使用版本ver1.1
  0x01,  //校验字段LSB，笔者自定义 param1 使用版本ver1.1
  //校验码是用来指示 数据的起始地址与所占有的空间，有利于从栈中扣除数据流
}
需要进行加密：使用默认密钥进行加密

锁控返回msg:
rx:uint8_t rxBuf
{
 0x03,  //恢复出厂设置的命令码
  
  /*接下来五个参数区,
   备注：校验码占住最后null内存区的首末地址
   数据长度（bytes）:2;(2个字节)
   */
  0x01,  //校验字段MSB，笔者自定义 param1 使用版本ver1.1
  0x01,  //校验字段LSB，笔者自定义 param1 使用版本ver1.1
  
  0x01,   //param2  锁控返回初始化的状态：初始化完成
  /*
  0x00,   //param2  锁控返回初始化的状态：初始化未完成
  */
  null,  //param3  NC 保留操作位
  null,  //param4  NC 保留操作位
  null,  //param5  NC 保留操作位 null：保留数据段，不占有任何空间
  
  0x01,  //校验字段MSB，笔者自定义 param1 使用版本ver1.1
  0x01,  //校验字段LSB，笔者自定义 param1 使用版本ver1.1
}